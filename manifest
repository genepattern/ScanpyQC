#Mon, 28 Mar 2022 18:06:51 -0400
#ScanpyQC
#Wed Sep 29 22:14:06 UTC 2021
JVMLevel=
LSID=urn\:lsid\:genepattern.org\:module.analysis\:00428\:0.7
author=Anthony S. Castanza
categories=singlecell
commandLine=bash <libdir>run_module.sh --python.executable\=python --src.path\=<libdir> --data.file\=<data.file> <mtGenes> --output.basename\=<output.basename> <genome>
cpuType=any
description=Create Scanpy Quality Control Plots to enable unblinded dataset filtering with ScanpyUtilities 
documentationUrl=https\://genepattern.github.io/ScanpyQC/v1/
fileFormat=h5;h5ad;loom;mtx
job.cpuCount=4
job.docker.image=genepattern/scanpyutilities\:0.100
job.memory=32 Gb
language=any
minGenePatternVersion=3.9.13
name=ScanpyQC
os=any
p1_MODE=IN
p1_TYPE=FILE
p1_default_value=
p1_description=A file containing single-cell data. h5ad, loom and mtx file formats are accepted. A 10x formatted hdf5 file may also be provided along with the 'genome' argument. The file will be internally converted to an h5ad file before proceeding.
p1_fileFormat=h5;h5ad;loom;mtx
p1_flag=
p1_name=data.file
p1_numValues=1..1
p1_optional=
p1_prefix=
p1_prefix_when_specified=
p1_type=java.io.File
p1_value=
p2_MODE=IN
p2_TYPE=FILE
p2_default_value=
p2_description=A file containing a list of the gene ids for mitochondrial genes. Optional, used for filtering by mitochondrial abundance.
p2_fileFormat=txt
p2_flag=--mito.file\=
p2_name=mtGenes
p2_numValues=0..1
p2_optional=on
p2_prefix=--mito.file\=
p2_prefix_when_specified=--mito.file\=
p2_type=java.io.File
p2_value=
p3_MODE=
p3_TYPE=TEXT
p3_default_value=<data.file_basename>
p3_description=Base filename used for labeling output files
p3_fileFormat=
p3_flag=
p3_name=output.basename
p3_numValues=1..1
p3_optional=
p3_prefix=
p3_prefix_when_specified=
p3_type=java.lang.String
p3_value=
p4_MODE=
p4_TYPE=TEXT
p4_default_value=
p4_description=When converting a 10x formated HDF5 file, the module will internally call read_10x_h5 from the scanpy package. This function expects a genome argument which specifies the name of the data set in the HDF5 file. e.g. 'GRCh38' 
p4_fileFormat=
p4_flag=--genome\=
p4_name=genome
p4_numValues=0..1
p4_optional=on
p4_prefix=--genome\=
p4_prefix_when_specified=--genome\=
p4_type=java.lang.String
p4_value=
privacy=public
publicationDate=03/28/2022 18\:06 
quality=preproduction
requiredPatchLSIDs=
requiredPatchURLs=
src.repo=
taskDoc=
taskType=singlecell
userid=acastanza
version=first Jenkins prerelease
